# 同一路径下，配置文件优先级： properties > yml > yaml
# 多环境配置：https://www.bilibili.com/video/BV14z4y1N7pg?p=44&vd_source=5c9f5bd891aee351c325bcf632b5550f 12:48

# web服务器启动端口
server:
  servlet:
    context-path: /
    encoding:
      enabled: true
      charset: UTF-8 # 必须设置 UTF-8，避免 WebFlux 流式返回（AI 场景）会乱码问题
      force: true

  error:
    whitelabel:
      enabled: true # 服务器运行错误的时候，是否直接显示错误堆栈到网页上

  shutdown: graceful # 优雅停机 关闭容器后默认等待30秒继续执行没处理完的任务 避免数据不一致
  tomcat:
    uri-encoding: UTF-8
    threads:
      max: 2500
      min-spare: 500
    # 最大吞吐量不限制
    max-swallow-size: -1 # https://mp.weixin.qq.com/s/95ziMFD4Lz3F7mjZ4TvclA
    max-http-form-post-size: -1
    max-connections: 6500
    accept-count: 1000
    # 链接建立超时时间
    connection-timeout: 12000

pagehelper: # https://blog.csdn.net/Reggie97/article/details/142388065
  helperDialect: mysql
  reasonable: true  # 规整页码范围，应对负数或过大页码
  supportMethodsArguments: true
  params: count=countSql
  # pageSizeZero: true

spring:
  application:
    name: mm[@activated@]:${server.port}

  main:
    banner-mode: off # 关闭Banner
    allow-circular-references: true # 允许循环依赖，因为项目是三层架构，无法避免这个情况。

  profiles: # 测试、开发、部署环境切换
    # 切换Profiles的配置之后不生效：https://blog.csdn.net/qq_43377237/article/details/103869813
    # clean之后重新构建
    active: @activated@

  jackson:
    default-property-inclusion: NON_EMPTY

  devtools:
    restart:
      enabled: true

  thymeleaf: # 模版引擎
    cache:
      false # Thymeleaf默认会开启页面缓存，提高页面并发能力。但会导致我们修改页面不会立即被展现，因此我们关闭缓存
    suffix: .html
    check-template-location: false
    enabled: true

  datasource:
    # https://www.iocoder.cn/Spring-Boot/dynamic-datasource/
    # https://github.com/alibaba/druid/blob/master/druid-spring-boot-3-starter/src/test/resources/application-multi-datasource.properties
    # https://github.com/alibaba/druid/tree/master/druid-spring-boot-3-starter
    type: com.alibaba.druid.pool.DruidDataSource
    dynamic:
      druid: # https://developer.aliyun.com/article/1345610 如果不希望使用baomidou自带的连接池，我们可以更换连接池，例如更换为alibaba开源的Druid连接池
        initial-size: 5
        max-active: 20
        max-wait: 60000
        min-idle: 5
        test-on-borrow: true
        test-on-return: false
        test-while-idle: true
        pool-prepared-statements: true
        filters: stat,wall,log4j2

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    servlet:
      path: /

  # Servlet 配置
  servlet:
    # 文件上传相关配置项 https://mp.weixin.qq.com/s/95ziMFD4Lz3F7mjZ4TvclA
    multipart:
      max-file-size: 300MB # 表示上传的单个文件的最大大小，默认为 1MB
      max-request-size: 1000MB # 表示多文件上传时文件的总大小，默认为 10MB
      enabled: true

  jpa: # https://www.zhangbj.com/p/1411.html https://blog.csdn.net/zhaolinfenggg/article/details/135706459
    show-sql: true # 显示sql
    hibernate: # 自动生成表结构
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

#  data:
#    redis:
#      # host: host.docker.internal 不被识别
#      database: 1 # 数据库索引 默认0
#      timeout: 10S # 超时时间:秒
#  cache:
#    type: redis
#    redis:
#      # 缓存null值，防止缓存穿透
#      cache-null-values: true

  security:
    user:
      name: swagger
      password: swagger

# https://zhuanlan.zhihu.com/p/654487249
# https://zhuanlan.zhihu.com/p/562942271
logging:
  # https://blog.csdn.net/zwrlj527/article/details/120553432
  # lockback-spring.xml中配置
  # config: classpath:logback-spring.xml
  # https://github.com/big-peng/monitor path属性表示监控的日志文件所在的路径，如果不配置name的话，默认就是目录下的spring.log文件
  file:
    name: .logs/log.txt
    # pattern: # https://docs.spring-boot-admin.com/current/client.html
    # file: %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

  level: # https://blog.csdn.net/oYinHeZhiGuang/article/details/120761368
    org:
      springframework:
        web:
          client:
            RestTemplate: OFF # 关闭SpringbootAdmin的client的日志
          HttpLogging : OFF # 关闭SpringbootAdmin的client的日志
  logback:
    rolling policy:
      max-file-size: 5MB # 日志文件最大大小（单位：字节），达到该大小后会进行切分等处理

# 不配置如下，admin的server端看不到详情
# 服务端点检查
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    # 在源代码的additional-spring-configuration-metadata.json中
    env: # 对应web页面的环境栏
      showValues: ALWAYS
    configprops: # 对应web页面的配置属性栏
      showValues: ALWAYS
    quartz:
      showValues: ALWAYS
    info: # https://blog.csdn.net/qq_46323758/article/details/130101237 # https://segmentfault.com/a/1190000019972355
      enabled: true
    health:
      show-details: always
      #logfile:
      #external-file: .logs/log.txt
  info:
    env:
      enabled: true

info:
  packageName: @project.groupId@.@project.artifactId@-[@activated@-jdk@java.version@]-@project.version@
  describe: 人员培训后台监控系统
  author: 崔斌斌 572005238@qq.com

mybatis:
  # resources目录下xml的mapper路径
  mapper-locations:
    - classpath:xmlMapper/*.xml
    - classpath:xmlMapper/common/*.xml
  # 配置 MyBatis 配置文件路径
  config-location: classpath:mybatis-config.xml
  # configuration: # 配合Mybatis-config的setting生效
  # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

  # entity实体类的路径，用于xml文件中的别名，一般是resultType
  # type-aliases-package: com.smlj.train.table*.entity
